Hi, I need your help

import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import {TextField, Button, StyledEngineProvider, Alert } from '@mui/material';
import '../styles/PatternProPage.css';

function PatternProPage() {
  const navigate = useNavigate();
  const [name, setName] = useState('');
  const [numQuestions, setNumQuestions] = useState('');
  const [errors, setErrors] = useState({
    name: false,
    questions: false,
    start: false
  });

  const handleNameChange = (e) => {
    const v = e.target.value;
    if (!/^[0-9a-zA-Z]{1,8}$/.test(v)) {
      setErrors({ ...errors, name: true });
    } else {
      setErrors({ ...errors, name: false });
      setName(v);
    }
  };

  const handleNumQuestionsChange = (e) => {
    const v = e.target.value;

    if (!/^(?:[1-9]|10)$/.test(v)) {
      setErrors({ ...errors, questions: true });
    } else {
      setErrors({ ...errors, questions: false });
      setNumQuestions(v);
    }
  };

  const handleStartQuiz = () => {
    if (errors.name || errors.questions || !numQuestions || !name) {
      setErrors({ ...errors, start: true });
    } else {
      navigate('/quiz', {
        state: {
          numQuestions: parseInt(numQuestions),
          quizName: name
        }
      });
    }
  };

  return (
    <StyledEngineProvider>
      <div className='page-container'>
        <div className='content-container'>
          <h1 className='page-title'>PatternPro</h1>
          <div className='input-container'>
            {errors.start && (
              <Alert severity='error' variant='filled'>
                Wrong information
              </Alert>
            )}
            <TextField
              error={errors.name}
              fullWidth
              variant='outlined'
              label='Name'
              onChange={handleNameChange}
            />

            <TextField
              error={errors.questions}
              fullWidth
              type='number'
              variant='outlined'
              label='Number of questions'
              onChange={handleNumQuestionsChange}
              sx={{
                fontFamily: 'Inter',
                fontWeight: '700'
              }}
            />
          </div>
        </div>
        <div className='button-container'>
          <Button
            onClick={handleStartQuiz}
            variant='contained'
            className='start-button'
            sx={{
              background: '#6137E3',
              textTransform: 'none',
              paddingTop: '0.5rem',
              paddingBottom: '0.5rem',
              fontSize: '2.5rem',
              fontFamily: 'Inter',
              fontWeight: 700,
              borderRadius: '0.9rem',
              width: '15%'
            }}
            disableElevation
          >
            Start
          </Button>
        </div>
      </div>
    </StyledEngineProvider>
  );
}

export default PatternProPage;

import React, { useState, useEffect, useRef } from "react";
import { useNavigate, useLocation } from "react-router-dom";
import {Button} from "@mui/material";
import CloseIcon from "@mui/icons-material/Close";
import QuizGrid from "../components/Question/QuizGrid.js";
import QuizScoreboard from "../components/Question/QuizScoreboard.js";
import Timer from "../components/Question/QuizTimer.js";
import "../styles/QuizPage.css";

const Questions = () => {
  const navigate = useNavigate();
  const location = useLocation();
  const { numQuestions, quizName } = location.state || {};
  const [currentQuestion, setCurrentQuestion] = useState(1);
  const [score, setScore] = useState(0);
  const [answered, setAnswered] = useState(false);
  const [isCorrect, setIsCorrect] = useState(null);
  const [timer, setTimer] = useState(30);

  useEffect(() => {
    if (
      !location.state ||
      !location.state.numQuestions ||
      !location.state.quizName
    ) {
      // Redirect if state is not provided
      navigate("/");
    }
  }, [location.state, navigate]);

  useEffect(() => {
    if (currentQuestion > numQuestions) {
      // Quiz completed
      navigate("/finish");
    }
  }, [currentQuestion, numQuestions, navigate]);
  useEffect(() => {
    setTimer(30);
  }, [currentQuestion]);

  const handleAnswer = (isCorrect) => {
    setAnswered(true);
    setIsCorrect(isCorrect);

    if (isCorrect) {
      setScore(score + 100 * timer);
    }
  };

  const handleNextQuestion = () => {
    setCurrentQuestion(currentQuestion + 1);
    setAnswered(false);
    setIsCorrect(null);
    const questionsContainer = document.querySelector(".questions-container");
    questionsContainer.classList.remove("correct");
    questionsContainer.classList.remove("incorrect");
    
  };

  const handleFinishQuiz = () => {
    navigate("/");
  };

  return (
    <div className="page">
      <div className="exit-container">
        <Button
          sx={{
            textTransform: "none",
            color: "#A3A4AA",
            fontWeight: 500,
            fontFamily: "Inter",
            fontSize: "1rem",
          }}
          startIcon={<CloseIcon />}
          onClick={handleFinishQuiz}
        >
          Finish quiz
        </Button>
      </div>
      <div className="timer-container">
        <Timer
          duration={timer}
          onComplete={() => {
            if (!answered) {
              handleAnswer(false);
            }
          }}
        />
      </div>
        <QuizGrid
          answered={answered}
          handleAnswer={handleAnswer}
          isCorrect={isCorrect}
        />
      <div className="controls-container">
        <div>
          <QuizScoreboard score={score} name = {quizName}/>
        </div>
        <div className="button-container">
          {answered ? (
            <Button
              variant="contained"
              sx={{
                height: "100%",
                backgroundColor: "#6137E3",
                textTransform: "none",
                fontFamily: "Inter",
                fontWeight: 700,
                fontSize: "1.5rem",
                borderRadius: "1rem",
              }}
              onClick={handleNextQuestion}
            >
              Next question
            </Button>
          ) : (
            <Button
              variant="contained"
              sx={{
                height: "100%",
                backgroundColor: "#6137E3",
                textTransform: "none",
                fontFamily: "Inter",
                fontWeight: 700,
                fontSize: "1.5rem",
                borderRadius: "1rem",
              }}
              disabled={!answered}
            >
              Submit
            </Button>
          )}
        </div>
      </div>
    </div>
  );
};

export default Questions;

import React from "react";
import { Button } from "@mui/material";
import {useNavigate} from "react-router-dom";
import ScoreContainer from "../components/EndQuiz/ScoreContainer";
import UserStats from "../components/EndQuiz/UserStats";
import '../styles/EndQuiz.css'


const EndQuiz = () => {
    const navigate = useNavigate();
    
      const RetakeQuiz = () => {
        navigate("/quiz");
      };
      const GoLeaderboard = () => {
        navigate("/");
      };
      const TakeAnotherQuiz = () => {
        navigate("/");
      };

    return(
        <div className="end-quiz">
            <ScoreContainer/>
            <UserStats/>
            <div className="buttons-container">
                <Button
                variant="contained"
                disableElevation
                sx={{
                    background: "#6137E3",
                    textTransform: "none",
                    paddingTop: "0.5rem",
                    paddingBottom: "0.5rem",
                    fontSize: "1.2rem",
                    fontFamily: "Inter",
                    fontWeight: 700,
                    borderRadius: "0.9rem"
                }}onClick={RetakeQuiz}>Retake quiz</Button>
                <Button
                variant="contained"
                disableElevation
                sx={{
                    background: "#FFC107",
                    textTransform: "none",
                    paddingTop: "0.5rem",
                    paddingBottom: "0.5rem",
                    fontSize: "1.2rem",
                    fontFamily: "Inter",
                    fontWeight: 700,
                    borderRadius: "0.9rem"
                }}onClick={GoLeaderboard}>Leaderboard</Button>
                <Button
                variant="contained"
                disableElevation
                sx={{
                    background: "#EE0808",
                    textTransform: "none",
                    paddingTop: "0.5rem",
                    paddingBottom: "0.5rem",
                    fontSize: "1.2rem",
                    fontFamily: "Inter",
                    fontWeight: 700,
                    borderRadius: "0.9rem"
                }}onClick={TakeAnotherQuiz}>Start another quiz</Button>
            </div> 
        </div>
    );
};

export default EndQuiz;

I need that in the next .js:

import React from "react";
import '../../styles/ScoreContainer.css'

const ScoreContainer = () => {

    return(
        <div className="score-display">
            <p className="score">1500</p>
        </div>
    );
};

export default ScoreContainer;

And this another .js:

import React from "react";
import { Box } from "@mui/material";
import '../../styles/UserStats.css'

const UserStats = () => {

    return(
    <div className="stats-container">
        <div className="stats-grid-container">
            <Box display="flex" justifyContent = "center" alignItems = "center" height = "100%" width="100%">
                <div className="stats-grid">
                    <div className="stats-cell">
                        <ul>
                            <li style={{
                                color: "#6137E3"
                            }}>10</li>
                            Total questions
                        </ul>
                    </div>
                    <div className="stats-cell">
                        <ul>
                            <li style={{
                                color: "#6137E3"
                            }}>70%</li>
                            Success rate
                        </ul>
                    </div>
                    <div className="stats-cell">
                        <ul>
                            <li style={{
                                color: "#EE0808"
                            }}>03</li>
                            Wrong
                        </ul>
                    </div>
                    <div className="stats-cell">
                        <ul>
                            <li style={{
                                color: "#08D74D"
                            }}>07</li>
                            Correct
                        </ul>
                    </div>
                </div>
            </Box>
        </div>
    </div>);
};

export default UserStats;

i need to extract the numbe rof questions putted, the correct answers responded, the wrong answers responded , please
