Hola necesito ayuda en este código,


import React, { useState } from "react";
import { Box } from "@mui/system";
import { Collapse, Alert , IconButton, Button } from "@mui/material";
import CloseIcon from "@mui/icons-material/Close";
import { shuffle } from "./Shuffle.js"; // Importar la función shuffle
import "../../styles/QuizGrid.css";

const QuizGrid = ({ answered, handleAnswer, isCorrect, item }) => {
  const [open, setOpen] = React.useState(true);
  const [selectedOption, setSelectedOption] = useState(null);
  const [Correct, setCorrect] = useState(null);

  let options = [
    { id: 1, text: item.answers.a, isCorrect: false },
    { id: 2, text: item.answers.b, isCorrect: false },
    { id: 3, text: item.answers.c, isCorrect: false },
    { id: 4, text: item.answers.d, isCorrect: false },
  ];

  if (item.correct_answer === "a") {
    options[0].isCorrect = true;
  } else if (item.correct_answer === "b") {
    options[1].isCorrect = true;
  } else if (item.correct_answer === "c") {
    options[2].isCorrect = true;
  } else {
    options[3].isCorrect = true;
  }

  const randomIndex = Math.floor(Math.random() * options.length);
  options[randomIndex].isCorrect = true;
  const shuffledOptions = shuffle(options); // Opciones mezcladas

  const handleOptionClick = (option) => {
    if (answered) return;
    setSelectedOption(option);
    const isAnswerCorrect = option.isCorrect;
    setCorrect(isAnswerCorrect);
    handleAnswer(isAnswerCorrect);
    const questionsContainer = document.querySelector(".questions-container");
    const selectedAnswer = document.querySelector(".quiz-cell");
    selectedAnswer.classList.add("selected");
    selectedAnswer.classList.add("unselected");
    questionsContainer.classList.add("correct");
    questionsContainer.classList.add("incorrect");
  };

  const explanationShow = (option) => {
    return (
      <div>
        <Box sx={{ width: "100%" }}>
          <Collapse in={open}>
            <Alert
              action={
                <IconButton
                  aria-label="close"
                  color="inherit"
                  size="small"
                  onClick={() => {
                    setOpen(false);
                  }}
                >
                  <CloseIcon fontSize="inherit" />
                </IconButton>
              }
              sx={{ mb: 2 }}
            >
              Explanation: {item.explanation}
            </Alert>
          </Collapse>
          <Button
            disabled={open}
            variant="outlined"
            onClick={() => {
              setOpen(true);
            }}
          >
            Re-open
          </Button>
        </Box>
      </div>
    );
  };

  return (
    <div
      className={`questions-container ${
        Correct !== null ? (Correct ? "correct" : "incorrect") : ""
      }`}
    >
      <div className="title">{item.question}</div>
      <div className="quiz-grid-container">
        <Box
          display="flex"
          justifyContent="center"
          alignItems="center"
          height="100%"
          width="100%"
        >
          <div className="quiz-grid">
            {shuffledOptions.map((option) => (
              <div
                key={option.id}
                className={`quiz-cell ${
                  selectedOption !== null
                    ? selectedOption === option
                      ? "selected"
                      : "nonselected"
                    : ""
                }`}
                onClick={() => {
                  handleOptionClick(option);
                  explanationShow(option);
                }}
              >
                {option.text}
              </div>
            ))}
          </div>
        </Box>
      </div>
    </div>
  );
};

export default QuizGrid;


Este es su .css:
.quiz-grid-container {
  width: 100%;
  height: 100%;
}

.quiz-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-gap: 1rem;
  width: 100%;
  height: 100%;
}

.quiz-cell {
  border: 1.5px solid #6137E3;
  padding: 2.5rem;
  border-radius: 20px;
  align-items: center;
  justify-content: center;
  display: flex;
  font-family: 'Inter';
}

.quiz-cell.selected {
  border: none;
  background: #F8F8FF;
}

.quiz-cell.nonselected {
  border: none;
  filter: blur(2px);
}

.quiz-cell.selected:hover {
  border: none;
  background: #6137E3;
}

.quiz-cell.nonselected:hover {
  border: none;
  background: #6137E3;
  color: black;
}

.quiz-cell:hover {
  background-color: #6137E3;
  color: #F8F8FF;
  font-family: 'Inter';
}

.questions-container {
  width: 90%;
  background: #F8F8FF;
  padding: 20px;
  border-radius: 20px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 28rem;
}

.questions-container.incorrect {
  background: #EE0808;

}

.questions-container.correct {
  background: #08D74D;

}


.title {
  font-family: 'Inter';
  font-size: 3rem;
  padding: 2rem;
  font-weight: 600;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
}

 cuando le doy a una de las cuatro opciones, se supone que se debe poner como seleccionada pero no se quedan todas asi,
